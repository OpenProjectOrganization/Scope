import ComposableArchitecture

public struct {{ name }}State: Equatable {
  public init(
      
  ) {
      
  }
}

public enum {{ name }}Action: Equatable {}

public typealias {{ name }}Reducer = Reducer<{{ name }}State, {{ name }}Action, AppEnvironment>

public let {{ name|lowercase }}Reducer = {{ name }}Reducer.combine(
  .init { state, action, environment in
    switch action {
        
    }
  }
)
