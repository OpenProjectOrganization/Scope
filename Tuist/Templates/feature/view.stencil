import Combine
import ComposableArchitecture
import SwiftUI

public struct {{ name }}View: View {
  let store: Store<{{ name }}State, {{ name }}Action>
  let statelessViewStore: ViewStore<Void, {{ name }}Action>
  
  public init(store: Store<{{ name }}State, {{ name }}Action>) {
    self.store = store
    self.statelessViewStore = .init(store.stateless)
  }
  
  public var body: some View {
    WithViewStore(store) { viewStore in
        Text("{{ name }}")
    }
  }
}

struct {{ name }}_Previews: PreviewProvider {
    static var previews: some View {
        {{ name }}View(
            store: Store(
                initialState: {{ name }}State(),
                reducer: {{ name|lowercase }}Reducer,
                environment: {{ name }}Environment(
                    
                )
            )
        )
    }
}
